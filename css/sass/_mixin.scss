@mixin total_position() {
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
}

@mixin list_style($bgk_color) {
	list-style: none;
	background: $bgk_color;
}

@mixin gen_border($side, $size : 1px, $color: rgba(0, 0, 0, 0.7), $alpha: 1) {
	$red: red($color);
	$green: green($color);
	$blue: blue($color);
	@if ($side != "") {
		border-#{$side}: $size solid rgba($red, $green, $blue, $alpha);
	}
}

@mixin placeholder-color($color) {
	&.placeholder {
		color: $color
	}

	&:-moz-placeholder {
		color: $color
	}

	&::-webkit-input-placeholder {
		color: $color
	}

	&:-ms-input-placeholder {
		color: $color
	}
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin clearfix() {
	& {
		*zoom: 1;
	}
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;
}

@mixin get_gradient($from_color, $to_color) {

	$from_red: red($from_color);
	$from_green: green($from_color);
	$from_blue: blue($from_color);
	$to_red: red($to_color);
	$to_green: green($to_color);
	$to_blue: blue($to_color);

	background-color: $from_color;
	background-image: -webkit-gradient(linear, left top, left bottom, from(rgb($from_red, $from_green, $from_blue)), to(rgb($to_red, $to_green, $to_blue)));
	background-image: -webkit-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: -moz-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: -o-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: -ms-linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
	background-image: linear-gradient(top, rgb($from_red, $from_green, $from_blue), rgb($to_red, $to_green, $to_blue));
}

@mixin get_animation($property: all, $speed : .3s, $animation_type: ease) {
	-webkit-transition: $property $speed $animation_type;
	-moz-transition: $property $speed $animation_type;
	-ms-transition: $property $speed $animation_type;
	-o-transition: $property $speed $animation_type;
	transition: $property $speed $animation_type;
}

@mixin rotate_object($degrees : 45deg) {
	-webkit-transform: rotate($degrees);
	-moz-transform: rotate($degrees);
	-ms-transform: rotate($degrees);
	-o-transform: rotate($degrees);
	transform: rotate($degrees);
}

@mixin image_scale($value: 1.1) {
	-webkit-transform: scale($value);
	-moz-transform: scale($value);
	-ms-transform: scale($value);
	-o-transform: scale($value);
	transform: scale($value);
}

@mixin headings($from: 1, $to: 6) {
	@for $i from $from through $to {
		h#{$i} {
			@content
		}
	}
}

@mixin include_heading() {
	@include headings() {
		font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
		color: rgba(0, 0, 0, 0.8);
		font-weight: 400;
		margin: 5px 0;
		padding: 2px;
	}
}

@mixin burger($width: 30px, $height: 5px, $gutter: 3px, $color: #000, $border-radius: 0, $transition-duration: .3s) {
	$burger-height: $height !global;
	$burger-gutter: $gutter !global;

	position: relative;
	margin-top: $height + $gutter;
	margin-bottom: $height + $gutter;

	&, &:before, &:after {
		display: block;
		width: $width;
		height: $height;
		background-color: $color;
		@if $border-radius != 0 {
			border-radius: $border-radius;
		}

		-webkit-transition-property: background-color, -webkit-transform;
		-moz-transition-property: background-color, -moz-transform;
		-o-transition-property: background-color, -o-transform;
		transition-property: background-color, transform;

		-webkit-transition-duration: $transition-duration;
		-moz-transition-duration: $transition-duration;
		-o-transition-duration: $transition-duration;
		transition-duration: $transition-duration;
	}

	&:before, &:after {
		position: absolute;
		content: "";
	}

	&:before {
		top: -($height + $gutter);
	}

	&:after {
		top: $height + $gutter;
	}
}

@mixin burger-parts {
	&, &:before, &:after {
		@content;
	}
}

@mixin burger-top {
	&:before {
		@content;
	}
}

@mixin burger-middle {
	& {
		@content;
	}
}

@mixin burger-bottom {
	&:after {
		@content;
	}
}

@mixin burger-to-cross {
	& {
		background-color: transparent;
	}
	&:before {
		-webkit-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
		-moz-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
		-ms-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
		-o-transform: translateY($burger-gutter + $burger-height) rotate(45deg);
		transform: translateY($burger-gutter + $burger-height) rotate(45deg);
	}
	&:after {
		-webkit-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
		-moz-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
		-ms-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
		-o-transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
		transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
	}
}

// Investor relations for making child div center and bottom of the parent
@mixin centerChildDiv{
	display: table-cell;
	vertical-align: middle;
}

@mixin bottomChildDiv{
	display: table-cell;
	vertical-align: bottom;
}
//-------------------